==============================
# update g++
sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
sudo apt-get install gcc-10 g++-10
sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 20 --slave /usr/bin/g++ g++ /usr/bin/g++-10

==============================
# install MOTION
git clone https://github.com/encryptogroup/MOTION.git
cd MOTION/
mkdir build && cd build
cmake ..
make


==============================
Server Settings

git clone https://github.com/liangzhao-darmstadt/MOTION.git
cd MOTION/
mkdir build && cd build
cmake ..
cmake .. -DMOTION_BUILD_EXE=On
cmake .. -DMOTION_BUILD_TESTS=On
cmake .. -DCMAKE_BUILD_TYPE=Release
make -j 20

==============================

simx1: simx1.encrypto.informatik.tu-darmstadt.de    130.83.125.165  
simx2: simx2.encrypto.informatik.tu-darmstadt.de    130.83.125.166  
simx3: simx3.encrypto.informatik.tu-darmstadt.de    130.83.125.167  
simx4: simx4.encrypto.informatik.tu-darmstadt.de    130.83.125.168  
simx5: simx5.encrypto.informatik.tu-darmstadt.de    130.83.125.169  

# Clean the network configurations
sudo /sbin/tc qdisc del dev [interface] root

sudo /sbin/tc qdisc del dev enp23s0 root

sim1: enp3s0f1
sim2 + sim3 + sim4: enp2s0f1
simx1 - simx5: enp23s0

cd /usr/local/sbin 
sudo tc_off

cd /usr/local/sbin 
sudo tc_lan10   # LAN Setting (10Gbit/s Bandwidth, 1ms RTT)

# cd /usr/local/sbin 
# sudo tc_lan1    #LAN Setting (1Gbit/s Bandwidth, 1ms RTT)

cd /usr/local/sbin 
sudo tc_wan     #WAN Setting (100Mbit/s Bandwidth, 100ms RTT)

# cd /usr/local/sbin 
# tc_wan_10gb_50ms # LAN Setting (10Gbit/s Bandwidth, 50ms RTT)

Usage
Before running your experiments, do the following:
Check the logged-in users and the running processes with w command.
Check CPU and memory usage with htop command.
Clean the network configurations by executing sudo /sbin/tc qdisc del dev [interface] root (gives an error if already cleaned).
When you are done running the experiments, you can remove your name from the spreadsheet.

cd ~/MOTION/build/bin/


===============================

0,130.83.125.165,23000 1,130.83.125.166,23000

0,130.83.125.165,23000 1,130.83.125.166,23000 2,130.83.125.167,23000

0,130.83.125.166,23000 1,130.83.125.167,23000 2,130.83.125.168,23000

0,130.83.125.166,23000 1,130.83.125.167,23000 2,130.83.125.168,23000 3,130.83.125.169,23000

0,130.83.125.165,23000 1,130.83.125.166,23000 2,130.83.125.167,23000 3,130.83.125.168,23000 4,130.83.125.169,23000

============================================================

./benchmark_liangzhao_arithmetic_gmw_operation --my-id 0 --parties 0,130.83.125.166,23000 1,130.83.125.167,23000 2,130.83.125.168,23000

./benchmark_liangzhao_arithmetic_gmw_operation --my-id 1 --parties 0,130.83.125.166,23000 1,130.83.125.167,23000 2,130.83.125.168,23000

./benchmark_liangzhao_arithmetic_gmw_operation --my-id 2 --parties 0,130.83.125.166,23000 1,130.83.125.167,23000 2,130.83.125.168,23000

============================================================


 


TCP
    Use command `sudo pkill -f 'BMR_offline_instance.out'` to kill process.

    Use command `sudo netstat -c -lat` to check if ports are successfully released (ports should be released after 60s in Ubuntu, not in state TIME_WAIT or CLOSE_WAIT).