To build an example simply run `make` in its directory. This should result in a
\*.circ file.

Simulating the compiled circuit can be done using `make run-sim`. In the case of
addition, this will output

    INPUT_A : int32 = 24
    INPUT_B : int32 = 42
    return_value : int32 = 66

Here you can see the input types and values of both parties and the output
computed by the circuit.

A more interesting use-case is to use the circuit for secure multi-party
computation using the ABY framework. Assuming ABY and the ABY adapter have been
installed (see top-level readme) you can run `make run-aby` to start a server
and a client that will evaluate the circuit using GMW or Yao's garbled circuit
protocol. For the addition example, you will see the following output:

    INPUT_B : int32 = 35
    return_value : int32 = 60

    INPUT_A : int32 = 25
    return_value : int32 = 60

(The order of the output may differ.) The first two lines and the last two lines
are generated by the server and the client, respectively.
